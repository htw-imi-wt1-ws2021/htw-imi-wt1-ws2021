<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vergleich verschiedener Programmiersprachen mit Fokus auf Web-Technology on Documentation for our Projects and Web Handbook</title><link>/webhandbook/programming_languages/</link><description>Recent content in Vergleich verschiedener Programmiersprachen mit Fokus auf Web-Technology on Documentation for our Projects and Web Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/webhandbook/programming_languages/index.xml" rel="self" type="application/rss+xml"/><item><title>1 Typsicherheit und Typisierung</title><link>/webhandbook/programming_languages/_1_typsicherheit_typisierung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_1_typsicherheit_typisierung/</guid><description>1.1 Typsicherheit Die Typsicherheit sorgt dafür, dass die Code-Qualität gewährleistet wird und sich somit die Zuverlässigkeit des entwickelten Programms erhöht. Es obliegt dem Interpreter beziehungsweise Compiler die Sicherheit durch Typprüfung herzustellen und Typverletzungen aufzufangen. Manche Compiler geben Meldungen aus und in manchen passiert eine automatisierte Typumwandlung, sollte es eine Typverletzung geben. Beispielsweise warnt ein Compiler davor, eine Gleitkommazahl (Float, Double) an eine Ganzzahl-Variable (Integer) zu übergeben. Dennoch müssen bei Zuweisungen die beteiligten Typen nicht notwendigerweise identisch sein, da beispielsweise Ganzzahlen unter Umständen an Gleitkommazahlen-Variablen zugewiesen werden können.</description></item><item><title>2 Frontend und Backend</title><link>/webhandbook/programming_languages/_2_frontend_backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_2_frontend_backend/</guid><description>2.1 Frontend Als Frontend wird die sogenannte Präsentationsebene bezeichnet - Das Sichtbare einer Webseite. Beispielsweise die Webseite eines Onlineshops. Das Frontend ist näher am Benutzer (Client) und erlaubt einen benutzerfreundlichen Zugriff auf Daten und Prozesse, die vom Backend ausgehen. [15, 44]
Spricht man davon, welche Programmiersprache für das Frontend benutzt wird, ist es nicht möglich, eine klare Aussage zu schaffen. Es ist durchaus möglich, eine Präsentationsebene zu erschaffen, ohne dafür überhaupt eine Programmiersprache zu benutzen - mit HTML und CSS.</description></item><item><title>3 Verschiedene Web-Programmiersprachen</title><link>/webhandbook/programming_languages/_3_verschiedene_websprachen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_3_verschiedene_websprachen/</guid><description>3.1 Web-Programmiersprachen Mittlerweile gibt es eine große Menge an verschiedenen Programmiersprachen. Jede Programmiersprache hat ihre Vorteile und Nachteile gegenüber einer anderen. Doch welche Programmiersprachen eignen sich für die Webentwicklung am besten? Gibt es überhaupt die eine Web-Programmiersprache?
Mit Web-Programmiersprachen können komplexe logische Anweisungen und Prozesse definiert werden. Jede Programmiersprache hat wie die verschiedenen Sprachfamilien auch ihre Eigenarten. In den folgenden Kapiteln werden die bekanntesten Vertreter der Web-Programmiersprachen kompakt vorgestellt.
3.1.1 JavaScript Bekannt ist JavaScript als prototypbasierte Skriptsprache für Webseiten.</description></item><item><title>4 HTML und CSS</title><link>/webhandbook/programming_languages/_4_html_css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_4_html_css/</guid><description>Sowohl HTML (H yper t ext M arkup L anguage) als auch CSS (C ascading S tyle S heets) sind keine Programmiersprachen.
HTML ist eine Auszeichnungssprache, welche verwendet wird, um eine Webseite zu strukturieren. Die Sprache besteht dabei aus sogenannten Tags, welche um Inhalte herum platziert werden, um diese beispielsweise als Link zu kennzeichnen. [38]
CSS ist eine Stylesheet-Sprache, die es erlaubt, das Aussehen von Elementen festzulegen. So kann mit CSS beispielsweise die Schriftfarbe angepasst werden.</description></item><item><title>5 Vergleich in Tabellenform</title><link>/webhandbook/programming_languages/_5_vergleich_tabellenform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_5_vergleich_tabellenform/</guid><description>Im folgenden Abschnitt werden die fünf vorgestellten Programmiersprachen tabellarisch nach ihren Eigenschaften verglichen, um für einen groben Überblick zu sorgen.
Auffällig hierbei ist, dass alle Programmiersprachen sowohl im Frontend als auch im Backend verwendet werden können, was nicht notwendigerweise bedeutet, dass das auch so praktiziert wird. Außerdem ist bei allen vorgestellten Programmiersprachen objektorientiertes Programmieren möglich beziehungsweise manche Sprachen bieten ein ähnliches Schema für Klassen.
Alle 5 Programmiersprachen sind zudem dynamisch typisiert.</description></item><item><title>6 Fazit</title><link>/webhandbook/programming_languages/_6_fazit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_6_fazit/</guid><description>Es gibt nicht die eine Programmiersprache für die Webentwicklung. Jede Programmiersprache hat Vor- und Nachteile gegenüber einer anderen. Dazu zählen neben der Typsicherheit, Typisierung und objektorientierten Programmierung auch die Komplexität der Programmiersprache. So ist beispielsweise Python durch die einfache Syntax leichter verständlich für Nicht-Informatiker. Es ist schlicht notwendig zu entscheiden, für welchen Anwendungszweck welche Sprache angewendet werden soll. Python wird beispielsweise häufiger in einem wissenschaftlichen Zusammenhang verwendet, da dort zahlreiche Bibliotheken für viele Anwendungen existieren sowie Python sich besonders für den Bereich Machine Learning als auch KI besser eignet.</description></item><item><title>7 Literaturverzeichnis</title><link>/webhandbook/programming_languages/_7_literaturverzeichnis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_7_literaturverzeichnis/</guid><description>[1] “JavaScript”, Mozilla, Link: https://developer.mozilla.org/de/docs/Web/JavaScript (letzter Zugriff am 30.12.2021) [2] “JavaScript”, Wikipedia, Link: https://de.wikipedia.org/wiki/JavaScript (letzter Zugriff am 30.12.2021) [3] “ECMAScript”, Wikipedia, Link: https://en.wikipedia.org/wiki/ECMAScript (letzter Zugriff am 30.12.2021 / 13:37) [4] “Memory footprint”, Wikipedia, Link: https://en.wikipedia.org/wiki/Memory_footprint (letzter Zugriff am 30.12.2021) [5] “Was ist Typsicherheit?”, Dev Insider, Link: https://www.dev-insider.de/was-ist-typsicherheit-a-955933/ (letzter Zugriff am 30.12.2021) [6] &amp;ldquo;Typsicherheit&amp;rdquo;, Wikipedia, Link: https://de.wikipedia.org/wiki/Typsicherheit (letzter Zugriff am 18.01.2022) [7] “Statische Typisierung”, Wikipedia, Link: https://de.wikipedia.org/wiki/Statische_Typisierung (letzter Zugriff am 30.</description></item></channel></rss>