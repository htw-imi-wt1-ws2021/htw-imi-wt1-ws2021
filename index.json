[{"uri":"/projects/_blueprint/","title":"Blueprint-Projekt","tags":["projekt0"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder Listung der Mitglieder\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/projects/_mystuff/","title":"MyStuff","tags":["projekt1"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder JÃ¶rdis Liermann - 0576959\nNguyen Xuan Bach Do - 0556341\nAlain Ngoufack Nguefack - 0557214\nDominic Engel - 0576863\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/projects/_oishi/","title":"Oishi","tags":["projekt2"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder Listung der Mitglieder\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/projects/","title":"Projekte","tags":["projekte"],"description":"","content":"Projekt 0 Blueprint-Projekt\nProjekt 1 MyStuff\nProjekt 2 Oishi\nProjekt 3 ToDog\nProjekt 4 Trackr\nProjekt 5 Zettelkasten\n"},{"uri":"/projects/_todog/","title":"ToDog","tags":["projekt3"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder Listung der Mitglieder\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/projects/_trackr/","title":"Trackr","tags":["projekt4"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder Listung der Mitglieder\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/webhandbook/","title":"Webhandbook","tags":["webhandbook"],"description":"","content":"Kapitel in alphabetischer Reihenfolge  APIS Authentication CI/CD CSS Processing Databases Microservices Node.js Programming Languages React UI/UX Web Frameworks Website Rendering  "},{"uri":"/projects/_zettelkasten/","title":"Zettelkasten","tags":["projekt5"],"description":"","content":"Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.\n1.1 Teammitglieder Listung der Mitglieder\n1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.3 Ziele Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.4 Technologien Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.5 Herausforderungen Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n1.6 Link zum Projekt Unser Projekt\n1.7 Screenshots vom Projekt 1.8 Link zum Sourcecode Code\n"},{"uri":"/webhandbook/programming_languages/_1_typsicherheit_typisierung/","title":"1 Typsicherheit und Typisierung","tags":["typsicherheit","typisierung"],"description":"Typsicherheit und Typisierung","content":"1.1 Typsicherheit Die Typsicherheit sorgt dafÃ¼r, dass die Code-QualitÃ¤t gewÃ¤hrleistet wird und sich somit die ZuverlÃ¤ssigkeit des entwickelten Programms erhÃ¶ht. Es obliegt dem Interpreter beziehungsweise Compiler die Sicherheit durch TypprÃ¼fung herzustellen und Typverletzungen aufzufangen. Manche Compiler geben Meldungen aus und in manchen passiert eine automatisierte Typumwandlung, sollte es eine Typverletzung geben. Beispielsweise warnt ein Compiler davor, eine Gleitkommazahl (Float, Double) an eine Ganzzahl-Variable (Integer) zu Ã¼bergeben. Dennoch mÃ¼ssen bei Zuweisungen die beteiligten Typen nicht notwendigerweise identisch sein, da beispielsweise Ganzzahlen unter UmstÃ¤nden an Gleitkommazahlen-Variablen zugewiesen werden kÃ¶nnen. Wichtig dabei ist, dass die Datentypen kompatibel zueinander sind [5, 6].\n1.2 Typisierung Das Ziel der Typisierung ist die Vermeidung von Laufzeitfehlern. Sie dient dazu, dass Objekte wie beispielsweise Variablen oder Funktionen korrekt verwendet werden beziehungsweise sie soll sicherstellen, dass keine Operation ausgefÃ¼hrt werden kann, die syntaktisch oder semantisch fehlerhaft ist. Programmiersprachen, die eine Typisierung aufweisen nennt man entweder stark typisiert oder schwach typisiert. Stark typisierte Programmiersprachen sind beispielsweise C++ und Java, wÃ¤hrend schwach typisierte Sprachen beispielsweise PHP und JavaScript sind. Bei der Typisierung gibt es TypprÃ¼fungen, die entweder zur Kompilierzeit oder Laufzeit vorgenommen werden. Man spricht hier entweder von einer statischen TypprÃ¼fung oder dynamischen TypprÃ¼fung. [9]\nStatische Typisierung\nDie statische Typisierung gilt als die stark typisierte Typisierung. Bei einer statischen TypprÃ¼fung werden beispielsweise Zuweisungsfehler noch vor der Laufzeit erkannt beziehungsweise wird eine TypprÃ¼fung bereits zum Zeitpunkt der Kompilierung durchgefÃ¼hrt. Der Nachteil einer statischen Typisierung ist, dass teilweise die Typen erst zur Laufzeit bekannt sind. Des Weiteren ist der Compiler komplexer, da hier ein gewisser Mehraufwand fÃ¼r die Analyse anfÃ¤llt. [7]\nDynamische Typisierung\nDiese Art der Typisierung zeichnet sich durch ein hohes MaÃ an FlexibilitÃ¤t aus und gilt als die schwach typisierte Typisierung. Doch kann die hohe FlexibilitÃ¤t als Schwachstelle gesehen werden. Denn manche Fehler kÃ¶nnen mit diesem Schema der Typisierung erst zur Laufzeit erkannt werden - das bedeutet unter UmstÃ¤nden eine erschwerte Fehlersuche. Des Weiteren ist die dynamische Typisierung anfÃ¤llig fÃ¼r einen nachlÃ¤ssigen Umgang in der Entwicklung. ZusÃ¤tzlich erlaubt die dynamische Typisierung die korrekte Verarbeitung von eigentlich inkompatiblen Typen. [8]\n"},{"uri":"/webhandbook/programming_languages/_2_frontend_backend/","title":"2 Frontend und Backend","tags":["frontend","backend"],"description":"Frontend und Backend","content":"2.1 Frontend Als Frontend wird die sogenannte PrÃ¤sentationsebene bezeichnet - Das Sichtbare einer Webseite. Beispielsweise die Webseite eines Onlineshops. Das Frontend ist nÃ¤her am Benutzer (Client) und erlaubt einen benutzerfreundlichen Zugriff auf Daten und Prozesse, die vom Backend ausgehen. [15]\nSpricht man davon, welche Programmiersprache fÃ¼r das Frontend benutzt wird, ist es nicht mÃ¶glich, eine klare Aussage zu schaffen. Es ist durchaus mÃ¶glich, eine PrÃ¤sentationsebene zu erschaffen, ohne dafÃ¼r Ã¼berhaupt eine Programmiersprache zu benutzen - mit HTML und CSS. Warum diese beiden Sprachen keine Programmiersprachen sind, wird im Punkt 4 HTML und CSS etwas nÃ¤her erlÃ¤utert. Mit einer Programmiersprache allein ist es kaum mÃ¶glich eine PrÃ¤sentationsebene zu erschaffen. Verschiedene Bibliotheken oder Frameworks zusammen mit einer Programmiersprache sind dafÃ¼r erforderlich. Beispielsweise das Zusammenspiel der Programmiersprache JavaScript und der JavaScript-Softwarebibliothek React. Oder das Framework Angular zusammen mit der Programmiersprache Typescript. Ein weiteres Beispiel wÃ¤re noch das Framework Symfony zusammen mit der Skriptsprache PHP. Es gibt viele MÃ¶glichkeit und es obliegt dem Entwickler, welche Technologie bevorzugt wird.\n2.2 Backend Anders als beim Frontend, ist das Backend nÃ¤her am System und bezeichnet den funktionalen Teil wie beispielsweise die Datenbank oder Datenverarbeitung einer Webseite. Der Benutzer (Client) einer Webseite sieht das Backend nicht und soll es auch nicht. Das Backend beschÃ¤ftigt sich mit der Datenverarbeitung im Hintergrund. [17]\nWie beim Frontend, ist es nicht mÃ¶glich eine klare Aussage zu schaffen, welche Programmiersprache fÃ¼r das Backend benutzt wird. Auch hier obliegt es dem Entwickler. Um ein Beispiel zu nennen: JavaScripts PopularitÃ¤t als Backend-Programmiersprache wuchs, als die plattformÃ¼bergreifende Laufzeitumgebung Node.js im FrÃ¼hjahr 2009 erschien. Mit Node.js ist die Erstellung von schnellen und skalierbaren serverseitigen Anwendungen, sowie Netzwerkanwendungen mÃ¶glich. Aber auch beispielsweise die Programmiersprache Python erfreut sich im Backend groÃer Beliebtheit - zusammen mit dem Framework Django. [19]\n"},{"uri":"/webhandbook/programming_languages/_3_verschiedene_websprachen/","title":"3 Verschiedene Web-Programmiersprachen","tags":["javascript","typescript","python","php","ruby"],"description":"Verschiedene Web-Programmiersprachen","content":"3.1 Web-Programmiersprachen Mittlerweile gibt es eine groÃe Menge an verschiedenen Programmiersprachen. Jede Programmiersprache hat ihre Vorteile und Nachteile gegenÃ¼ber einer anderen. Doch welche Programmiersprachen eignen sich fÃ¼r die Webentwicklung am besten? Gibt es Ã¼berhaupt die eine Web-Programmiersprache?\nMit Web-Programmiersprachen kÃ¶nnen komplexe logische Anweisungen und Prozesse definiert werden. Jede Programmiersprache hat wie die verschiedenen Sprachfamilien auch ihre Eigenarten. In den folgenden Kapiteln werden die bekanntesten Vertreter der Web-Programmiersprachen kompakt vorgestellt.\n3.1.1 JavaScript Bekannt ist JavaScript als prototypbasierte Skriptsprache fÃ¼r Webseiten. Jedoch wird diese lightweight Sprache auch in anderen Umgebungen eingesetzt, wie beispielsweise Node.js oder Apache. Was bedeutet lightweight im Zusammenhang mit einer Programmiersprache? Lightweight Sprachen sind so designt, dass sie einen kleinen Memory-Footprint besitzen (wenig Speicher benÃ¶tigen), einfach in verschiedenen Systemen zu implementieren sind und sie eine minimalistische Syntax aufweisen.\nJavaScript trÃ¤gt zwar den Namen der objektorientierten Programmiersprache Java, doch wurden beide Sprachen in den frÃ¼hen 90er-Jahren unabhÃ¤ngig voneinander entwickelt mit vÃ¶llig unterschiedlichen Grundkonzepten.\nJe nach Bedarf lÃ¤sst sich in JavaScript objektorientiert, prozedural oder funktional programmieren. Dies ist mÃ¶glich durch den standardisierten Sprachkern ECMAScript. Dieser beschreibt eine dynamisch typisierte, objektorientierte, aber klassenlose Sprache.\nObjektorientierte Programmierung\nObwohl JavaScript dank seines Sprachkerns objektorientierte Programmierparadigmen beinhaltet, kann es nicht als objektorientierte Programmiersprache angesehen werden. JavaScript unterstÃ¼tzt Grundelemente der Objektorientierung wie beispielsweise Datenkapselung, Polymorphie und Vererbung. Doch das wesentlichste Konzept Klassen bietet sie nicht. Mit ECMAScript 6 (kurz ES6) wurde jedoch das SchlÃ¼sselwort class eingefÃ¼hrt, mit dem es mÃ¶glich ist, nun pseudo Klassen zu definieren. Doch sind diese nichts weiter als Funktionen - anstatt function ist es nun mÃ¶glich, class zu verwenden.\nPrototyp\nJedes Objekt in JavaScript verfÃ¼gt Ã¼ber die Eigenschaft prototype. Mit diesem Muster beziehungsweise Bauplan werden Objekte erzeugt. Anders als in objektorientierten und klassenbasierten Sprachen, wo Klassen das Muster fÃ¼r Objekte sind.\nPrototypen unterscheiden sich von Klassen dahingehend, dass auf Objekten eines Prototyps beliebige Operationen ausgefÃ¼hrt werden kÃ¶nnen. Das geht bei Klassen nicht. Ein weiterer Unterschied ist, wenn aus einer Klasse ein Objekt gebildet wird, entsteht eine Instanz. Bei Objekten eines Prototypen referenziert das erzeugte Objekt auf den Prototypen. Auch ist es mÃ¶glich, das Objekte eines Prototyps nachtrÃ¤glich mit Eigenschaften und Methoden ergÃ¤nzt werden kÃ¶nnen. Das geht bei Klassen auch nicht.\nTypisierung\nJavaScript ist ein Vertreter der dynamischen Typisierung. Das bedeutet, dass die TypprÃ¼fung erst zur Laufzeit passiert - beispielsweise die PrÃ¼fung des Datentyps einer Variable.\nTypsicherheit\nIn Sachen Typsicherheit nimmt es JavaScript nicht allzu ernst. In groÃen Projekten ist JavaScript bezÃ¼glich der dynamischen Typsicherheit nicht einfach zu handhaben, da Typen schlichtweg nicht angegeben werden mÃ¼ssen.\nFrontend\nJavaScript zÃ¤hlt wohl mit zu den beliebtesten Programmiersprachen Ã¼berhaupt und die Sprache unterstÃ¼tzt wohl die meisten Frameworks und Bibliotheken, die es fÃ¼r den Frontend-Bereich gibt. JavaScript ist Ã¼beraus beliebt und dynamisch und unterstÃ¼tzt unter anderem folgende Frontend-Frameworks und Bibliotheken: Angular, React, Vue.js, Ember.js, Aurelia, und noch viele mehr!\nBackend\nWie beim Frontend, zÃ¤hlt JavaScript auch beim Backend zu den beliebtesten Programmiersprachen Ã¼berhaupt. JavaScript unterstÃ¼tzt auch im Bereich Backend eine vielzahl von verschiedenen Frameworks und Bibliotheken: Node.js, Next.js, Express.js, Meteor, und mehr.\n3.1.2 TypeScript Einer der hÃ¤ufigsten auftretenden Fehler bei der Programmierung mit JavaScript sind Typfehler. Da Typen bei JavaScript nicht angegeben werden mÃ¼ssen, passiert es hÃ¤ufig, das ein anderer Typ Ã¼bergeben wird, als erwartet und dadurch zahlreiche Fehler entstehen kÃ¶nnen. Das Ziel von TypeScript ist ein statischer Type Checker fÃ¼r JavaScript Programme darzustellen. Bevor das Programm ausgefÃ¼hrt wird, wird Ã¼berprÃ¼ft, ob die Typen im Programm korrekt sind. Typescript bietet dabei alle JavaScript FunktionalitÃ¤ten und zusÃ¤tzlich dazu ein eigenes Typsystem. JavaScript bietet beispielsweise primitive Datentypen wie string oder number, Ã¼berprÃ¼ft jedoch nicht, ob diese auch konsistent zugewiesen werden. TypeScript tut das.\nObjektorientierte Programmierung\nDie objektorientierte Programmierung mit TypeScript erfolgt nach den gleichen Prinzipien wie in JavaScript. TypeScript unterstÃ¼tzt auch dabei auch JavaScript-âKlassenâ. Des Weiteren werden weitere typische Pattern wie die Implementierung von Interfaces, Vererbung und statische Methoden unterstÃ¼tzt.\nTypisierung\nTypeScript ist mit seinem statischen Typsystem ein Vertreter der statischen Typisierung. Die Verwendung dieses ist jedoch optional, weshalb auch das Schreiben von dynamisch typisierten Code mÃ¶glich ist.\nTypsicherheit\nTypeScript verbessert die Typsicherheit von JavaScript-Programmen, beispielsweise dadurch, das nun Typen angegeben werden mÃ¼ssen. Allerdings ist auch die Typsicherheit von TypeScript noch ausbaufÃ¤hig, weshalb im Jahr 2014 das Projekt: Safer TypeScript von Microsoft Research entwickelt und im Juli desselben Jahres verÃ¶ffentlicht wurde. Hierbei soll die Typsicherheit durch eine Kombination von statischer und dynamischer ÃberprÃ¼fungen gewÃ¤hrleistet werden.\nFrontend\nTypeScript ist mittlerweile eine Ã¼beraus beliebte Programmiersprache im Bereich Frontend-Entwicklung. Laut einem Bericht von State of Frontend aus dem Jahr 2020, haben 94% der befragten Frontend-Entwickler angegeben, dass sie am liebsten mit TypeScript entwickeln. Weitere Ergebnisse des Berichts sind auf der entsprechenden Webseite nachzulesen: https://tsh.io/state-of-frontend/\nBackend\nSeit Node.js es ermÃ¶glicht auch mit JavaScript im Backend-Bereich zu entwickeln, gewinnt auch TypeScript an Beliebtheit bei der Backend-Entwicklung. Besonders dadurch, das TypeScript sowohl im Backend als auch im Frontend verwendet werden kann, sorgt dies fÃ¼r eine positive Entwicklererfahrung, da nun nicht mehr zwischen verschiedenen Programmiersprachen gewechselt werden muss.\n3.1.3 Python Python ist eine zu interpretierende und interaktive Programmiersprache. Ein Ziel der Programmiersprache Python ist eine sehr einfache und Ã¼bersichtliche Syntax. Wodurch auch Nicht-Programmierern der Einstieg in die Sprache leicht fallen soll. Python verfÃ¼gt unter anderem Ã¼ber Module, Klassen, Exceptions und High-Level dynamische Datentypen.\nObjektorientierte Programmierung\nPython ist eine hÃ¶here und objektorientierte Programmiersprache. Mit dem SchlÃ¼sselwort class kÃ¶nnen Klassen definiert werden, welche Attribute und Methoden beinhalten.\nTypisierung\nPython ist Vertreter der dynamischen Typisierung.\nTypsicherheit\nSeit Version 3.6 sind Typangaben fÃ¼r Variablen bei Python mÃ¶glich. Vorher erfuhr Python die Typen erst zur Laufzeit und Variablen mussten nicht einem speziellen Typen zugewiesen werden. Die sogenannten Type Hints in Python 3.6 fÃ¼gen Variablen oder anderen Programmobjekten Typinformationen hinzu. So kann nun auch der RÃ¼ckgabewert einer Funktion vordefiniert werden. Durch die dynamische Typisierung und den Type Hints bietet Python eine hohe Typsicherheit.\nFrontend\nEs ist mÃ¶glich, Python im Frontend zu nutzen. Dies wird jedoch nicht gÃ¤ngige Praxis, da meist JavaScript, sowie ihre Bibliotheken benÃ¶tigt werden. AuÃerdem muss Python-Code vorher geparst und ausgefÃ¼hrt werden.\nBackend\nAls Backend-Programmiersprache ist Python im Vergleich zum Frontend wesentlich beliebter. Einer der GrÃ¼nde dafÃ¼r ist die einfache Lesbarkeit von Python. Des Weiteren unterstÃ¼tzen zahlreiche Web-Frameworks mittlerweile Python, dazu zÃ¤hlen beispielsweise Django oder Flask.\n3.1.4 PHP Ist die Rede von Web-Programmiersprachen, so spielt die Skriptsprache PHP eine Ã¼beraus groÃe Rolle. PHP ist die mit Abstand am hÃ¤ufigsten serverseitig verwendete Programmiersprache zur Erstellung von Webseiten. Die Syntax von PHP ist angelehnt an den Programmiersprachen C und Perl. Anders als beispielsweise bei JavaScript, ist PHP eine serverseitig interpretierte Skriptsprache, mit der es mÃ¶glich ist, Webseiten dynamisch zu erzeugen, sowie Daten aus Benutzereingaben und Datenbanken zu verarbeiten.\nBei serverseitigem Code wird der Quelltext nicht direkt an den Webbrowser Ã¼bermittelt, sondern an einen Interpreter auf dem Webserver. Der PHP-Interpreter schickt die Ausgabe an den Browser - ein HTML-Dokument.\nWarum PHP und nicht rein HTML?\nHTML oder HTML-Dateien sind rein statisch. Zum Beispiel: Bei der Erstellung einer Tabelle mit einer bestimmten Anzahl an EintrÃ¤gen kann nur diese bestimmte Anzahl angezeigt werden. Mit PHP ist das flexibel beziehungsweise dynamisch mÃ¶glich. Theoretisch alles, was auf einer Webseite dynamisch angezeigt werden soll, ist mit PHP mÃ¶glich - beispielsweise ein Besuchercounter oder EintrÃ¤ge in einem GÃ¤stebuch.\nObjektorientierte Programmierung\nIn PHP ist die objektorientierte Programmierung mÃ¶glich. Dadurch wird PHP-Code leichter wartbar und ist einfacher wiederverwendbar.\nTypisierung\nWie bei vielen anderen Skriptsprachen auch, ist PHP ein Vertreter der dynamischen Typisierung beziehungsweise PHP ist schwach typisiert. Das bedeutet, dass die TypprÃ¼fung erst zur Laufzeit passiert - beispielsweise die PrÃ¼fung des Datentyps einer Variable.\nTypsicherheit\nPHP ist eine schwach typisierte Programmiersprache und somit ist es nicht mÃ¶glich, typsicher zu deklarieren. Jedoch gibt es bei PHP das Type Hinting mit dem es Funktionen ermÃ¶glicht, spezifische Parameter zu erzwingen.\nFrontend und Backend PHP unterstÃ¼tzt unter anderem folgende Frameworks: Symfony, Laravel, CodeIgniter, CakePHP oder Phalcon.\n3.1.5 Ruby Ruby ist eine dynamische Programmiersprache, die sich produktiv einsetzen lÃ¤sst. Sie zeichnet sich aus durch eine elegante und leicht zu lesende und schreibende Syntax. Ruby ist eine objektorientierte Programmiersprache, unterstÃ¼tzt aber weitere Programmierparadigmen, wie prozedurale und funktionale Programmierung. Die wohl grÃ¶Ãte Verbreitung findet Ruby im Einsatz als Webserver-Skriptsprache.\nObjektorientierte Programmierung\nRuby ist von Grund auf objektorientiert, was bedeutet, dass in Ruby ausnahmslos jeder Wert ein Objekt und jede Funktion eine Methode ist. Selbst Klassen sind Objekte. Die Objekte in Ruby sind dynamisch, was bedeutet, dass es auch mÃ¶glich ist, prototypenbasiert zu programmieren. Damit kÃ¶nnen Objekte eigene Methoden haben.\nTypisierung\nRuby ist Vertreter der dynamischen Typisierung und ist somit schwach typisiert.\nTypsicherheit\nWie bei anderen Vertretern der dynamischen Typisierung auch ist es bei Ruby nicht mÃ¶glich, typsicher zu deklarieren.\nFrontend\nRuby wird teilweise auch fÃ¼r den Frontend-Bereich eingesetzt. Dennoch wird Ruby mehr als Backend-Programmiersprache gesehen als Frontend. Um Ruby im Frontend einzusetzen, muss Ruby-Quellcode in JavaScript-Code umgewandelt werden. Mit Ruby2JS, einer Ruby Erweiterung kÃ¶nnen Entwickler in Ruby-Code schreiben und den Code dann in JavaScript-Code umwandeln lassen.\nBackend\nRuby ist eine Ã¼beraus beliebte Programmiersprache fÃ¼r den Backend-Bereich. Das wohl bekannteste Backend-Framework fÃ¼r Ruby ist Ruby on Rails. Das beliebteste Feature von Ruby on Rails ist die Model-View-Controller-Architektur (kurz MVC). Dadurch ermÃ¶glicht das Framework, alle Code-VorgÃ¤nge separat durchzufÃ¼hren. Neben Ruby on Rails gibt es noch weitere Backend-Frameworks wie: Sinatra, Roda oder auch Camping.\n"},{"uri":"/webhandbook/programming_languages/_4_html_css/","title":"4 HTML und CSS","tags":["html","css"],"description":"HTML und CSS","content":"Sowohl HTML (H yper t ext M arkup L anguage) als auch CSS (C ascading S tyle S heets) sind keine Programmiersprachen.\nHTML ist eine Auszeichnungssprache, welche verwendet wird, um eine Webseite zu strukturieren. Die Sprache besteht dabei aus sogenannten Tags, welche um Inhalte herum platziert werden, um diese beispielsweise als Link zu kennzeichnen. [38]\nCSS ist eine Stylesheet-Sprache, die es erlaubt, das Aussehen von Elementen festzulegen. So kann mit CSS beispielsweise die Schriftfarbe angepasst werden. Das CSS wird mit einem HTML-Dokument verknÃ¼pft, so das dieses auf die RegelsÃ¤tze im CSS-Dokument zugreifen kann. Ein Regelsatz besteht dabei aus einem Selektor, dieser bestimmt, auf welche Elemente der Regelsatz angewendet werden soll und aus einer oder mehreren Deklarationen. Eine Deklaration beinhaltet dabei eine Eigenschaft - beispielsweise die Farbe - und den Eigenschaftswert - beispielsweise rot. [39]\nHTML und CSS sind beides wichtige Bestandteile bei der Webentwicklung, die jedoch nicht als Programmiersprachen angesehen werden kÃ¶nnen.\n"},{"uri":"/webhandbook/programming_languages/_5_vergleich_tabellenform/","title":"5 Vergleich in Tabellenform","tags":["vergleich"],"description":"Vergleich in Tabellenform","content":"Im folgenden Abschnitt werden die fÃ¼nf vorgestellten Programmiersprachen tabellarisch nach ihren Eigenschaften verglichen, um fÃ¼r einen groben Ãberblick zu sorgen.\nAuffÃ¤llig hierbei ist, dass alle Programmiersprachen sowohl im Frontend als auch im Backend verwendet werden kÃ¶nnen, was nicht notwendigerweise bedeutet, dass das auch so praktiziert wird. AuÃerdem ist bei allen vorgestellten Programmiersprachen objektorientiertes Programmieren mÃ¶glich beziehungsweise manche Sprachen bieten ein Ã¤hnliches Schema fÃ¼r Klassen.\nAlle 5 Programmiersprachen sind zudem dynamisch typisiert. Einzige Ausnahme bietet TypeScript mit seiner optional statischen Typisierung.\n"},{"uri":"/webhandbook/programming_languages/_6_fazit/","title":"6 Fazit","tags":["fazit"],"description":"Fazit","content":"Es gibt nicht die eine Programmiersprache fÃ¼r die Webentwicklung. Jede Programmiersprache hat Vor- und Nachteile gegenÃ¼ber einer anderen. Es ist schlicht notwendig zu entscheiden, fÃ¼r welchen Anwendungszweck welche Sprache angewendet werden soll. Des Weiteren ist zu berÃ¼cksichtigen, dass es noch wesentlich mehr Programmiersprachen fÃ¼r die Webentwicklung gibt, welche in diesem Text aus PlatzgrÃ¼nden nicht erwÃ¤hnt wurden.\nEinen aktuellen Blick auf die beliebtesten Sprachen und Frameworks im Bereich Frontend liefert ein Bericht aus dem Jahr 2020: https://tsh.io/state-of-frontend/#ebook\nHierbei gewann React mit deutlichem Abstand. Darauf folgten Angular und Vue.js. Alle drei Frameworks nutzen dabei JavaScript und / oder TypeScript als Web-Programmiersprache. Daraus lÃ¤sst sich schlieÃen, dass diese beiden Sprachen zumindest im Frontend momentan die wohl beliebtesten Programmiersprachen sind.\n"},{"uri":"/webhandbook/programming_languages/_7_literaturverzeichnis/","title":"7 Literaturverzeichnis","tags":["literaturverzeichnis"],"description":"Literaturverzeichnis","content":" [1] âJavaScriptâ, Mozilla, Link: https://developer.mozilla.org/de/docs/Web/JavaScript (letzter Zugriff am 30.12.2021) [2] âJavaScriptâ, Wikipedia, Link: https://de.wikipedia.org/wiki/JavaScript (letzter Zugriff am 30.12.2021) [3] âECMAScriptâ, Wikipedia, Link: https://en.wikipedia.org/wiki/ECMAScript (letzter Zugriff am 30.12.2021 / 13:37) [4] âMemory footprintâ, Wikipedia, Link: https://en.wikipedia.org/wiki/Memory_footprint (letzter Zugriff am 30.12.2021) [5] âWas ist Typsicherheit?â, Dev Insider, Link: https://www.dev-insider.de/was-ist-typsicherheit-a-955933/ (letzter Zugriff am 30.12.2021) [6] \u0026ldquo;Typsicherheit\u0026rdquo;, Wikipedia, Link: https://de.wikipedia.org/wiki/Typsicherheit (letzter Zugriff am 18.01.22) [7] âStatische Typisierungâ, Wikipedia, Link: https://de.wikipedia.org/wiki/Statische_Typisierung (letzter Zugriff am 30.12.2021) [8] âDynamische Typisierungâ, Wikipedia, Link: https://de.wikipedia.org/wiki/Dynamische_Typisierung (letzter Zugriff am 30.12.2021) [9] \u0026ldquo;Typisierung (Informatik)\u0026rdquo;, Wikipedia, Link: https://de.wikipedia.org/wiki/Typisierung_(Informatik) (letzter Zugriff am 18.01.2022) [10] âIs JavaScript a (true) OOP language?â, Andrea Chiarelli, Link: https://medium.com/@andrea.chiarelli/is-javascript-a-true-oop-language-c87c5b48bdf0 (letzter Zugriff am 30.12.2021) [11] âOOP in JavaScriptâ, Demir Jasarevic, Link: https://www.demirjasarevic.com/oop-javascript/ (letzter Zugriff am 30.12.2021) [12] âWeb-Programmiersprachen: Die besten Sprachen fÃ¼r die Webentwicklungâ, MediaartJena, Link: https://www.mediaart-jena.de/index.php/2020/03/09/web-programmiersprachen-die-besten-sprachen-fuer-die-webentwicklung/ (letzter Zugriff am 30.12.2021) [13] âPerl, PHP, Python Ein Vergleichâ, Alvar C.H. Freude, Link: https://alvar.a-blast.org/vortraege/scriptsprachen-vergleich.pdf (letzter Zugriff am 30.12.2021) [14] âTop 7 Programming Languages for Backend Web Developmentâ, GeeksforGeels, Link: https://www.geeksforgeeks.org/top-7-programming-languages-for-backend-web-development/ (letzter Zugriff am 01.01.2022) [15] âFrontendâ, DigitalWiki, Link: https://www.digitalwiki.de/frontend/ (letzter Zugriff am 01.01.2022) [16] âTop 10 Frontend-Sprachenâ, Back4App, Link: https://blog.back4app.com/de/top-10-frontend-sprachen/ (letzter Zugriff am 01.01.2022) [17] âBackend â Definitionâ, IT-Serive.Network, Link: https://it-service.network/it-lexikon/backend (letzter Zugriff am 01.01.2022) [18] âWas ist Node.js und warum du es benutzen solltestâ, kinsta, Link: https://kinsta.com/de/wissensdatenbank/was-ist-node-js/ (letzter Zugriff am 01.01.2022) [19] â10 Best JavaScript Frameworks to Use in 2022â, Simran Kaur Arora, Link: https://hackr.io/blog/best-javascript-frameworks (letzter Zugriff am 01.01.2022) [20] âTypes of Computer languagesâ, Pooja Gupta , Link: https://www.educba.com/types-of-computer-language/ (letzter Zugriff am 28.11.2021) [21] âcomputer programming languageâ,\tDavid Hemmendinger, Link: https://www.britannica.com/technology/computer-programming-language (letzter Aufruf am 28.11.2021) [22] âCOMPARING WEB LANGUAGES IN THEORY AND PRACTICâ, Kristofer J. Carlson, Link: http://www.krisandsusanna.com/Documents/Comparing%20Web%20Languages.pdf (letzter Aufruf am 28.11.2021) [23] âProgramming Languages for the Web 2011â, David Matthias StÃ¶ckl, Link: https://www.blackbam.at/blackbams-blog/wp-content/uploads/2011/09/programming_languages_for_the_web_2011.pdf (letzter Aufruf am 28.11.2021) [24] âTypescript vs JavaScript: Whatâs the Difference?â, Hartman, Link: https://www.guru99.com/typescript-vs-javascript.html (letzter Zugriff am 29.11.2021) [25] âobject-oriented programming (OOP)â, Alexander S. Gillis, Link: https://searchapparchitecture.techtarget.com/definition/object-oriented-programming-OOP (letzter Zugriff am 29.11.2021) [26] âTypes of programming languageâ, bbc.co.uk, Link: https://www.bbc.co.uk/bitesize/guides/z4cck2p/revision/1 (letzter Zugriff am 9.11.2021) [27] âDifference between High Level and Low level languagesâ, GeeksforGeels, Link: https://www.geeksforgeeks.org/difference-between-high-level-and-low-level-languages/ (letzter Zugriff am 29.11.2021) [28] âWhat is a Programming Language and Different Typesâ, WatElectronics.com, Link: https://www.watelectronics.com/types-of-programming-languages-with-differences/ (letzter Zugriff am 29.11.2021) [29] âList of programming languages by typeâ, Wikipedia, Link: https://en.wikipedia.org/wiki/List_of_programming_languages_by_type (letzter Zugriff am 29.11.2021) [30] âcomputer programming languageâ, Britannica, Link: https://www.britannica.com/technology/computer-programming-language (letzter Zugriff am 29.11.2021) [31] TypeScript Docs, Microsoft, Link: https://www.typescriptlang.org/docs/ (Letzter Zugriff am 04.01.2022) [32] âMehr Typsicherheit mit Safer TypeScriptâ, Heise online, Alexander Neumann, 04.07.2014, Link: https://www.typescriptlang.org/docs/ (letzter Zugriff am 04.01.2022) [33] âTypeScript: Microsofts neues typisiertes JavaScriptâ, heise online, Golo Roden, 04.10.2012, Link: https://www.typescriptlang.org/docs/ (letzter Zugriff am 04.01.2022) [34] âSafer TypeScriptâ, Microsoft, Link https://www.microsoft.com/en-us/download/details.aspx?id=52309\u0026amp;from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fdownloads%2Fb250c887-2b79-4413-9d7a-5a5a0c38cc57%2F (letzter Zugriff am 04.01.2022) [35] âExplizite Typangaben in Python: Segen oder Fluch?â , heise online, Gerhard VÃ¶lki, 09.02.2018, Link: https://www.heise.de/hintergrund/Explizite-Typangaben-in-Python-Segen-oder-Fluch-3964094.html (letzter Zugriff am 04.01.2022) [36] âUsing Python for Frontendâ, Fernando Doglio, 02.04.2021, Link: https://blog.bitsrc.io/using-python-for-frontend-f90a0f8d51ae (letzter Zugriff am 04.01.2022) [37] âWhy we choose Python as a backend languageâ, Pablo Giampedraglia, 23.11.2019, Link: https://www.asapdevelopers.com/python-backend-language/ (letzter Zugriff am 04.01.2022) [38] âHTML-Grundlagenâ, Mozilla, Link: https://developer.mozilla.org/de/docs/Learn/Getting_started_with_the_web/HTML_basics (letzter Zugriff am 04.01.2022) [39] âCSS-Grundlaagenâ, Mozilla, Link:https://developer.mozilla.org/de/docs/Learn/Getting_started_with_the_web/CSS_basics (letzter Zugriff am 04.01.2022) [40] âFront End vs. Back End Developmentâ, Nicholas Gallinelli, Link: https://flatironschool.com/blog/front-end-vs-back-end-development (letzter Zugriff am 04.01.22) [41] âTop 10 Ruby Frameworksâ, Back4App, Link: https://blog.back4app.com/ruby-frameworks/ (letzter Zugriff am 04.01.22) [42] âRuby (Programmiersprache)â, Wikipedia, Link: https://de.wikipedia.org/wiki/Ruby_(Programmiersprache) (letzter Zugriff am 04.01.22)  "},{"uri":"/webhandbook/apis/","title":"APIs","tags":["chapter"],"description":"","content":"APIs Einleitungstext\n"},{"uri":"/webhandbook/authentication/","title":"Authentication","tags":["chapter"],"description":"","content":"Authentication Einleitungstext\n"},{"uri":"/tags/backend/","title":"backend","tags":[],"description":"","content":""},{"uri":"/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/tags/chapter/","title":"chapter","tags":[],"description":"","content":""},{"uri":"/webhandbook/ci_cd/","title":"CI/CD","tags":["chapter"],"description":"","content":"CI/CD Einleitungstext\n"},{"uri":"/credits/","title":"Credits","tags":[],"description":"","content":"Contributors Lorem Ipsum\nMitwirkende Lorem Ipsum\n"},{"uri":"/tags/css/","title":"css","tags":[],"description":"","content":""},{"uri":"/webhandbook/css_processing/","title":"CSS Processing","tags":["chapter"],"description":"","content":"CSS Processing Einleitungstext\n"},{"uri":"/webhandbook/databases/","title":"Databases","tags":["chapter"],"description":"","content":"Databases Einleitungstext\n"},{"uri":"/tags/fazit/","title":"fazit","tags":[],"description":"","content":""},{"uri":"/tags/frontend/","title":"frontend","tags":[],"description":"","content":""},{"uri":"/tags/html/","title":"html","tags":[],"description":"","content":""},{"uri":"/tags/javascript/","title":"javascript","tags":[],"description":"","content":""},{"uri":"/tags/literaturverzeichnis/","title":"literaturverzeichnis","tags":[],"description":"","content":""},{"uri":"/webhandbook/microservices/","title":"Microservices","tags":["chapter"],"description":"","content":"Microservices Einleitungstext\n"},{"uri":"/webhandbook/node/","title":"Node.js","tags":["chapter"],"description":"","content":"Node.js Einleitungstext\n"},{"uri":"/tags/php/","title":"php","tags":[],"description":"","content":""},{"uri":"/tags/projekt0/","title":"projekt0","tags":[],"description":"","content":""},{"uri":"/tags/projekt1/","title":"projekt1","tags":[],"description":"","content":""},{"uri":"/tags/projekt2/","title":"projekt2","tags":[],"description":"","content":""},{"uri":"/tags/projekt3/","title":"projekt3","tags":[],"description":"","content":""},{"uri":"/tags/projekt4/","title":"projekt4","tags":[],"description":"","content":""},{"uri":"/tags/projekt5/","title":"projekt5","tags":[],"description":"","content":""},{"uri":"/tags/projekte/","title":"projekte","tags":[],"description":"","content":""},{"uri":"/tags/python/","title":"python","tags":[],"description":"","content":""},{"uri":"/webhandbook/react/","title":"React","tags":["chapter"],"description":"","content":"React Einleitungstext\n"},{"uri":"/tags/ruby/","title":"ruby","tags":[],"description":"","content":""},{"uri":"/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"/tags/typescript/","title":"typescript","tags":[],"description":"","content":""},{"uri":"/tags/typisierung/","title":"typisierung","tags":[],"description":"","content":""},{"uri":"/tags/typsicherheit/","title":"typsicherheit","tags":[],"description":"","content":""},{"uri":"/webhandbook/ui_ux/","title":"UI/UX","tags":["chapter"],"description":"","content":"UI/UX Einleitungstext\n"},{"uri":"/tags/vergleich/","title":"vergleich","tags":[],"description":"","content":""},{"uri":"/webhandbook/programming_languages/","title":"Vergleich verschiedener Programmiersprachen mit Fokus auf Web-Technology","tags":["chapter"],"description":"","content":"Vergleich verschiedener Programmiersprachen mit Fokus auf Web-Technology Im folgenden Text geht es um den Vergleich verschiedener Web-Programmiersprachen. ZunÃ¤chst werden dabei die Grundlagen der Typisierung und Typsicherheit sowie Backend und Frontend nÃ¤her erlÃ¤utert. AnschlieÃend werden insgesamt 5 Programmiersprachen nÃ¤her vorgestellt, wobei besonders die Punkte Typisierung, Typsicherheit, objektorientierte Programmierung sowie die Anwendung im Front- und Backend-Bereich der einzelnen Programmiersprachen im Fokus liegen. Aufgrund des begrenzten Umfangs dieses Textes werden folgende Web-Programmiersprachen vorgestellt: JavaScript, TypeScript, Python, PHP und Ruby. Neben diesen 5 gibt es noch weitere Programmiersprachen, die fÃ¼r die Webentwicklung verwendet werden kÃ¶nnen. Auch HTML und CSS werden in diesem Text kurz erlÃ¤utert, aber nicht mit in das Fazit einbezogen. AnschlieÃend werden die vorgestellten Programmiersprachen tabellarisch gegenÃ¼bergestellt und in ihren Eigenschaften verglichen. AbschlieÃend folgt ein kompaktes Fazit.\n"},{"uri":"/webhandbook/web_frameworks/","title":"Web Frameworks","tags":["chapter"],"description":"","content":"Web Frameworks Einleitungstext\n"},{"uri":"/tags/webhandbook/","title":"webhandbook","tags":[],"description":"","content":""},{"uri":"/webhandbook/website_rendering/","title":"Website Rendering","tags":["chapter"],"description":"","content":"Website Rendering Einleitungstext\n"},{"uri":"/","title":"WT1 WEB APPLICATIONS","tags":[],"description":"","content":"WT1 - Web Applications | WiSe2021/22 Willkommen auf unserer Projektseite im Kurs Web Applications.\nHier findet ihr einmal ein Webhandbook, das von uns verfasst wurde, sowie eine Ãbersicht Ã¼ber die Projekte, an denen dieses Semester gearbeitet wurde.\n"}]