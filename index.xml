<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WT1 WEB APPLICATIONS on Documentation for our Projects and Web Handbook</title><link>/</link><description>Recent content in WT1 WEB APPLICATIONS on Documentation for our Projects and Web Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Blueprint-Projekt</title><link>/projects/_blueprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_blueprint/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Listung der Mitglieder
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</description></item><item><title>MyStuff</title><link>/projects/_mystuff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_mystuff/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Jördis Liermann - 0576959
Nguyen Xuan Bach Do - 0556341
Alain Ngoufack Nguefack - 0557214
Dominic Engel - 0576863
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.</description></item><item><title>Oishi</title><link>/projects/_oishi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_oishi/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Listung der Mitglieder
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</description></item><item><title>ToDog</title><link>/projects/_todog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_todog/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Listung der Mitglieder
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</description></item><item><title>Trackr</title><link>/projects/_trackr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_trackr/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Listung der Mitglieder
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</description></item><item><title>Zettelkasten</title><link>/projects/_zettelkasten/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/_zettelkasten/</guid><description>Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts, Kurzbeschreibung des Projekts.
1.1 Teammitglieder Listung der Mitglieder
1.2 Ausgangslage Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</description></item><item><title>1 Fundamentals of Website Rendering</title><link>/webhandbook/website_rendering/_1_fundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/website_rendering/_1_fundamentals/</guid><description>To display the contents of a website, a browser will typically request HTML, CSS, JavaScript and image content from a server and interpret it based on web standards and specifications. While doing so it uses multiple engines, each with different tasks that it has to complete. For example there is the Layout Engine that reacts to user input e.g. in the URL bar, or there is the Network Layer that handles network functions and all kinds of network requests.</description></item><item><title>1 History and Terminology</title><link>/webhandbook/css_processing/_1_terminology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_1_terminology/</guid><description>History CSS processors have existed for quite a while. The first release of the popular Sass processor was in 2006! CSS is a powerful and versatile language to describe the appearance of web pages but lacks features from other programming languages to increase productivity and reduce redundancies. However, some shortcomings of the language have been addressed in recent years, and features that once could only be achieved through CSS processors are now available in the language itself.</description></item><item><title>1 Typsicherheit und Typisierung</title><link>/webhandbook/programming_languages/_1_typsicherheit_typisierung/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_1_typsicherheit_typisierung/</guid><description>1.1 Typsicherheit Die Typsicherheit sorgt dafür, dass die Code-Qualität gewährleistet wird und sich somit die Zuverlässigkeit des entwickelten Programms erhöht. Es obliegt dem Interpreter beziehungsweise Compiler die Sicherheit durch Typprüfung herzustellen und Typverletzungen aufzufangen. Manche Compiler geben Meldungen aus und in manchen passiert eine automatisierte Typumwandlung, sollte es eine Typverletzung geben. Beispielsweise warnt ein Compiler davor, eine Gleitkommazahl (Float, Double) an eine Ganzzahl-Variable (Integer) zu übergeben. Dennoch müssen bei Zuweisungen die beteiligten Typen nicht notwendigerweise identisch sein, da beispielsweise Ganzzahlen unter Umständen an Gleitkommazahlen-Variablen zugewiesen werden können.</description></item><item><title>2 Authoring</title><link>/webhandbook/css_processing/_2_authoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_2_authoring/</guid><description>As mentioned in the previous chapter, the CSS specification has significantly caught up with the feature set that processing tools provide today. Features such as variables, color mixing, importing, or mathematical operations can all be used directly in the browser with the added benefit of being dynamically changeable.[2]
Still, there are CSS processor features that can immensely help with writing nice code and that have not made it in the CSS spec.</description></item><item><title>2 Frontend und Backend</title><link>/webhandbook/programming_languages/_2_frontend_backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_2_frontend_backend/</guid><description>2.1 Frontend Als Frontend wird die sogenannte Präsentationsebene bezeichnet - Das Sichtbare einer Webseite. Beispielsweise die Webseite eines Onlineshops. Das Frontend ist näher am Benutzer (Client) und erlaubt einen benutzerfreundlichen Zugriff auf Daten und Prozesse, die vom Backend ausgehen. [15, 44]
Spricht man davon, welche Programmiersprache für das Frontend benutzt wird, ist es nicht möglich, eine klare Aussage zu schaffen. Es ist durchaus möglich, eine Präsentationsebene zu erschaffen, ohne dafür überhaupt eine Programmiersprache zu benutzen - mit HTML und CSS.</description></item><item><title>2 Types of Render Modes and their Advantages and Disadvantages</title><link>/webhandbook/website_rendering/_2_types_pros_cons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/website_rendering/_2_types_pros_cons/</guid><description>Rendering Modes Traditional SSR (Server Side Rendering) Traditional SPA (Single Page Application) using CSR (Client Side Rendering) Universal / Rehydration SSR Static SSR CSR with Pre-Rendering TRADITIONAL SSR (SERVER SIDE RENDERING) Server Side Rendering was the only way to do things when the web just started. The server generates all HTML files and sends it to the browser – so the browser gets a fully formed HTML web page with the HTML components already created.</description></item><item><title>3 A Visual Guide on when to use which Rendering Mode</title><link>/webhandbook/website_rendering/_3_visual_guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/website_rendering/_3_visual_guide/</guid><description/></item><item><title>3 Optimisation</title><link>/webhandbook/css_processing/_3_optimisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_3_optimisation/</guid><description>In addition to the features that support developers in designing stylesheets, there are also features of CSS processors that optimize existing CSS for speed and browser support.
Minification The probably most popular CSS processing feature is minification. Most programming languages include characters that are not strictly part of the syntax but increase legibility. This means whitespace characters primarily, and to a lesser extent, the variable names a developer has chosen. Most CSS minifiers strip away comments and whitespace characters, which can lead to a reduction in file size up to 50%.</description></item><item><title>3 Verschiedene Web-Programmiersprachen</title><link>/webhandbook/programming_languages/_3_verschiedene_websprachen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_3_verschiedene_websprachen/</guid><description>3.1 Web-Programmiersprachen Mittlerweile gibt es eine große Menge an verschiedenen Programmiersprachen. Jede Programmiersprache hat ihre Vorteile und Nachteile gegenüber einer anderen. Doch welche Programmiersprachen eignen sich für die Webentwicklung am besten? Gibt es überhaupt die eine Web-Programmiersprache?
Mit Web-Programmiersprachen können komplexe logische Anweisungen und Prozesse definiert werden. Jede Programmiersprache hat wie die verschiedenen Sprachfamilien auch ihre Eigenarten. In den folgenden Kapiteln werden die bekanntesten Vertreter der Web-Programmiersprachen kompakt vorgestellt.
3.1.1 JavaScript Bekannt ist JavaScript als prototypbasierte Skriptsprache für Webseiten.</description></item><item><title>4 HTML und CSS</title><link>/webhandbook/programming_languages/_4_html_css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_4_html_css/</guid><description>Sowohl HTML (H yper t ext M arkup L anguage) als auch CSS (C ascading S tyle S heets) sind keine Programmiersprachen.
HTML ist eine Auszeichnungssprache, welche verwendet wird, um eine Webseite zu strukturieren. Die Sprache besteht dabei aus sogenannten Tags, welche um Inhalte herum platziert werden, um diese beispielsweise als Link zu kennzeichnen. [38]
CSS ist eine Stylesheet-Sprache, die es erlaubt, das Aussehen von Elementen festzulegen. So kann mit CSS beispielsweise die Schriftfarbe angepasst werden.</description></item><item><title>4 Popular Tools</title><link>/webhandbook/css_processing/_4_popular_tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_4_popular_tools/</guid><description>There are four very popular CSS processing tools. They all support some of the features mentioned above, but none of them support them all. Further, some of them can be used together, but again not all.
Sass Sass[10] is the oldest of the four presented tools, with the initial release in 2006. It has a large set of features that extend the CSS syntax, like nesting, functions or variables, and supports two syntaxes.</description></item><item><title>4 Sources</title><link>/webhandbook/website_rendering/_4_sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/website_rendering/_4_sources/</guid><description>Amsive Digital. (2014, 7. Juli). What Does It Mean To “Render” a Webpage?. Amsive Digital.
https://www.amsivedigital.com/insights/performance-creative/rendering-a-webpage-with-google-webmaster-tools/ (Zugegriffen am 25. November 2021, 11:23 Uhr)
Ibrahim, K. (2020, 6. Oktober). Gray Area on When to use Different Rendering Modes CSR, SSR, SSG. Medium.
URL: https://kirillibrahim.medium.com/gray-area-on-when-to-use-different-rendering-modes-csr-ssr-ssg-214a636a24a4 (Zugegriffen am 25. November 2021, 11:32 Uhr)
Jacquart, G. (2020, 14. Juni). SPA, SSG, SSR and JAMStack: a front-end acronyms guide.</description></item><item><title>5 Integration and Considerations</title><link>/webhandbook/css_processing/_5_integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_5_integration/</guid><description>Integration The presented processing tools all come with command-line interfaces, which take multiple input files and usually a config to generate or transform CSS.
Usually, these transformations are done in a more complex build pipeline for the entire project, using a bundler or task-runner. Especially Sass and Less have multiple implementations in different languages. Which one is most suitable often depends on the bundler or task-runner that is being used.</description></item><item><title>5 Vergleich in Tabellenform</title><link>/webhandbook/programming_languages/_5_vergleich_tabellenform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_5_vergleich_tabellenform/</guid><description>Im folgenden Abschnitt werden die fünf vorgestellten Programmiersprachen tabellarisch nach ihren Eigenschaften verglichen, um für einen groben Überblick zu sorgen.
Auffällig hierbei ist, dass alle Programmiersprachen sowohl im Frontend als auch im Backend verwendet werden können, was nicht notwendigerweise bedeutet, dass das auch so praktiziert wird. Außerdem ist bei allen vorgestellten Programmiersprachen objektorientiertes Programmieren möglich beziehungsweise manche Sprachen bieten ein ähnliches Schema für Klassen.
Alle 5 Programmiersprachen sind zudem dynamisch typisiert.</description></item><item><title>6 Fazit</title><link>/webhandbook/programming_languages/_6_fazit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_6_fazit/</guid><description>Es gibt nicht die eine Programmiersprache für die Webentwicklung. Jede Programmiersprache hat Vor- und Nachteile gegenüber einer anderen. Dazu zählen neben der Typsicherheit, Typisierung und objektorientierten Programmierung auch die Komplexität der Programmiersprache. So ist beispielsweise Python durch die einfache Syntax leichter verständlich für Nicht-Informatiker. Es ist schlicht notwendig zu entscheiden, für welchen Anwendungszweck welche Sprache angewendet werden soll. Python wird beispielsweise häufiger in einem wissenschaftlichen Zusammenhang verwendet, da dort zahlreiche Bibliotheken für viele Anwendungen existieren sowie Python sich besonders für den Bereich Machine Learning als auch KI besser eignet.</description></item><item><title>6 Literature</title><link>/webhandbook/css_processing/_6_literature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/css_processing/_6_literature/</guid><description>Deconfusing Pre- and Post-processing — https://medium.com/@ddprrt/deconfusing-pre-and-post-processing-d68e3bd078a3 Still using CSS preprocessors in 2020? — https://medium.com/@bartsis/still-using-css-preprocessors-in-2020-aa893a476bc4 How to calculate percent minus px in SASS ? — https://www.geeksforgeeks.org/how-to-calculate-percent-minus-px-in-sass/ Nesting Style Rules — https://sass-lang.com/documentation/style-rules#nesting css-modules — https://github.com/css-modules/css-modules PostCSS Color Hex Alpha Plugin — https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-color-hex-alpha autoprefixer — https://github.com/postcss/autoprefixer Is Vendor Prefixing Dead? — https://css-tricks.com/is-vendor-prefixing-dead/ Vendor Prefix - MDN — https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix Sass: Syntactically Awesome Style Sheets — https://sass-lang.com/ Less CSS — https://lesscss.org/ CSS Style Syntax — https://stylus-lang.</description></item><item><title>7 Literaturverzeichnis</title><link>/webhandbook/programming_languages/_7_literaturverzeichnis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/webhandbook/programming_languages/_7_literaturverzeichnis/</guid><description>[1] “JavaScript”, Mozilla, Link: https://developer.mozilla.org/de/docs/Web/JavaScript (letzter Zugriff am 30.12.2021) [2] “JavaScript”, Wikipedia, Link: https://de.wikipedia.org/wiki/JavaScript (letzter Zugriff am 30.12.2021) [3] “ECMAScript”, Wikipedia, Link: https://en.wikipedia.org/wiki/ECMAScript (letzter Zugriff am 30.12.2021 / 13:37) [4] “Memory footprint”, Wikipedia, Link: https://en.wikipedia.org/wiki/Memory_footprint (letzter Zugriff am 30.12.2021) [5] “Was ist Typsicherheit?”, Dev Insider, Link: https://www.dev-insider.de/was-ist-typsicherheit-a-955933/ (letzter Zugriff am 30.12.2021) [6] &amp;ldquo;Typsicherheit&amp;rdquo;, Wikipedia, Link: https://de.wikipedia.org/wiki/Typsicherheit (letzter Zugriff am 18.01.2022) [7] “Statische Typisierung”, Wikipedia, Link: https://de.wikipedia.org/wiki/Statische_Typisierung (letzter Zugriff am 30.</description></item><item><title>Credits</title><link>/credits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/credits/</guid><description>Contributors Lorem Ipsum
Mitwirkende Lorem Ipsum</description></item></channel></rss>